principal = 5000
rate = 0.05
time = 5
goal = 7000

#You may modify the lines of code above, but don't move them!
#When you Submit your code, we'll change these lines to
#assign different values to the variables.

#Recall in problem 2.4.5 you wrote some code that calculated
#the amount of money in an account based on this formula:
#
#   amount = principal * e ^ (rate * time)
#
#Those three variables are given above again, as well as a
#fourth: goal. We want to see if the investment given by
#these values will exceed the goal. If it will, we want to
#print this message:
#
#  "You'll exceed your goal by [extra money]"
#
#If it will not, we want to print this message:
#
#  "You'll fall short of your goal by [needed money]"
#
#If the investor will meet their goal, [extra money] should
#be the final amount minus the goal. If the investor will
#not meet their goal, [needed money] will be the goal minus
#the final amount.
#
#To make the output more legible, though, we want to round
#the difference to two decimal places. If the difference is
#contained in a variable called 'difference', then we can
#do this to round it: rounded_diff = round(difference, 2)


#sample solution1

principal = 5000
rate = 0.05
time = 5
goal = 7000

import math

#Here's our answer: we first calculate the amount given the
#principal, interest rate, and time. Then, we calculate the
#difference between it and our goal. If the difference is
#positive, that means the goal was met, so we print the
#corresponding message.
amount = amount = principal * math.e ** (rate * time)
difference = amount - goal
if difference > 0:
    print("You'll exceed your goal by " + str(round(difference, 2)))

#If the difference was negative, then the goal was not met,
#so we print the corresponding message. By putting
#-difference instead of difference, we get rid of the negative
#sign for printing. We could have also written
#-round(difference, 2) and it would have performed the same
#way.
else:
    print("You'll fall short of your goal by " + str(round(-difference, 2)))
